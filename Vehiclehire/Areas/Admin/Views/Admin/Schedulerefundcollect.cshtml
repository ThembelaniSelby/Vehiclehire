@model Vehiclehire.Models.Delivery

@{
    ViewBag.Title = "Schedulerefundcollect";
}

<h2>COLLECT REFUND ITEM</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.OrderId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderId, new { htmlAttributes = new { @class = "form-control",@Disabled="Disabled" } })
                @Html.ValidationMessageFor(model => model.OrderId, "", new { @class = "text-danger" })
            </div>
        </div>

      

        <div class="form-group">
            @Html.LabelFor(model => model.NumberPlate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberPlate, new { htmlAttributes = new { @class = "form-control", @Disabled = "Disabled" } })
                @Html.ValidationMessageFor(model => model.NumberPlate, "", new { @class = "text-danger" })
            </div>
        </div>

      

        <div class="form-group">
            @Html.LabelFor(model => model.DriverName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DriverName, new { htmlAttributes = new { @class = "form-control", @Disabled = "Disabled" } })
                @Html.ValidationMessageFor(model => model.DriverName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Destination, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Destination, new { htmlAttributes = new { @class = "form-control", @Disabled = "Disabled" } })
                @Html.ValidationMessageFor(model => model.Destination, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PickUpTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="datetime-local" class="form-control" name="PickUpTime" required/>
                @Html.ValidationMessageFor(model => model.PickUpTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PickUpAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PickUpAddress, new { htmlAttributes = new { @class = "form-control", @Disabled = "Disabled" } })
                @Html.ValidationMessageFor(model => model.PickUpAddress, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="SUBMIT" class="btn btn-info" />
            </div>
        </div>
    </div>
}

